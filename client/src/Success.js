import React, { useEffect, useState } from 'react';
import { useNavigate, useLocation } from 'react-router-dom';

function Success() {
  const [status, setStatus] = useState('loading');
  const navigate = useNavigate();
  const location = useLocation();

  useEffect(() => {
    const submitBooking = async () => {
      const urlParams = new URLSearchParams(window.location.search);
      const sessionId = urlParams.get('session_id');
      if (!sessionId) return;

      try {
        const stripeRes = await fetch(`https://videographer-booking-server.onrender.com/api/checkout-session?session_id=${sessionId}`);
        const stripeData = await stripeRes.json();
        const metadata = stripeData?.metadata;

        if (!metadata) throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç metadata –∏–∑ Stripe session');

        const bookingData = {
          name: metadata.name || '',
          phone: metadata.phone || '',
          email: metadata.email || '',
          product: metadata.product || '',
          date: metadata.date || null,
          startTime: metadata.startTime || '',
          endTime: metadata.endTime || '',
          paymentAmount: 50,
          paymentDate: new Date().toISOString(),
        };

        console.log('üì¶ bookingData to server:', bookingData);

        if (!bookingData.date) throw new Error('‚ùå –î–∞—Ç–∞ –±—Ä–æ–Ω–∏ –Ω–µ –ø–æ–ª—É—á–µ–Ω–∞ –∏–∑ metadata');

        const res = await fetch('https://videographer-booking-server.onrender.com/api/book', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(bookingData),
        });

        const data = await res.json();
        if (!data.success) throw new Error(data.error);

        console.log('‚úÖ Booking saved successfully');
        setStatus('success');
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –±—Ä–æ–Ω–∏:', error.message);
        setStatus('error');
      }
    };

    submitBooking();
  }, [location.search]);

  const handleBack = () => {
    navigate('/');
  };

  return (
    <div style={{ padding: '30px', textAlign: 'center' }}>
      {status === 'loading' && <p>–û–±—Ä–∞–±–æ—Ç–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è...</p>}
      {status === 'success' && (
        <>
          <h2>‚úÖ –°–ø–∞—Å–∏–±–æ! –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ.</h2>
          <p>–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ, –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.</p>
          <button onClick={handleBack}>–í–µ—Ä–Ω—É—Ç—å—Å—è</button>
        </>
      )}
      {status === 'error' && (
        <>
          <h2>‚ö†Ô∏è –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...</h2>
          <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é.</p>
          <button onClick={handleBack}>–í–µ—Ä–Ω—É—Ç—å—Å—è</button>
        </>
      )}
    </div>
  );
}

export default Success;
