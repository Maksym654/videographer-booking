import React, { useEffect, useState } from 'react';
import { useSearchParams } from 'react-router-dom';

function Success() {
  const [searchParams] = useSearchParams();
  const [status, setStatus] = useState('loading');

  useEffect(() => {
    const sessionId = searchParams.get('session_id');
    if (!sessionId) {
      setStatus('error');
      return;
    }

    console.log('‚úÖ session_id –Ω–∞–π–¥–µ–Ω:', sessionId);

    const fetchSession = async () => {
      try {
        const res = await fetch(`https://videographer-booking-server.onrender.com/api/session-details?session_id=${sessionId}`);
        const data = await res.json();
        console.log('‚úÖ session-details data:', data);

        if (!data.metadata) throw new Error('Metadata not found');

        const bookingRes = await fetch('https://videographer-booking-server.onrender.com/api/book', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            ...data.metadata,
            paymentAmount: 50,
            paymentDate: new Date().toISOString(),
            createdAt: new Date().toISOString(),
            status: 'pending'
          })
        });

        if (!bookingRes.ok) throw new Error('Booking save failed');

        setStatus('success');
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –Ω–∞ Success:', error);
        setStatus('error');
      }
    };

    fetchSession();
  }, [searchParams]);

  // –°—Ç–∞—Ä—ã–π return ‚Äî –≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω
  /*
  if (status === 'loading') return <h2>–ó–∞–≥—Ä—É–∑–∫–∞...</h2>;
  if (status === 'success') return <h2>‚úÖ –°–ø–∞—Å–∏–±–æ! –ë—Ä–æ–Ω—å —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞. –í–æ–∑–≤—Ä–∞—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã...</h2>;
  return <h2>‚ö†Ô∏è –û—à–∏–±–∫–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.</h2>;
  */

  const lang = localStorage.getItem('bookingLang') || 'de';
  const messages = {
    de: {
      text: '‚úÖ Danke! Ihre Buchung war erfolgreich. Wir werden Sie kontaktieren. Bei Fragen schreiben Sie mir:',
      telegram: 'Telegram',
      whatsapp: 'WhatsApp',
    },
    en: {
      text: '‚úÖ Thank you! Your booking was successful. We will contact you. If you have any questions, feel free to contact me:',
      telegram: 'Telegram',
      whatsapp: 'WhatsApp',
    },
    ru: {
      text: '‚úÖ –°–ø–∞—Å–∏–±–æ! –ë—Ä–æ–Ω—å —É—Å–ø–µ—à–Ω–æ. –ú—ã —Å –≤–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è. –ï—Å–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã ‚Äî –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ:',
      telegram: '–¢–µ–ª–µ–≥—Ä–∞–º',
      whatsapp: '–í–∞—Ç—Å–∞–ø',
    },
    ua: {
      text: '‚úÖ –î—è–∫—É—î–º–æ! –ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è —É—Å–ø—ñ—à–Ω–µ. –ú–∏ –∑ –≤–∞–º–∏ –∑–≤‚Äô—è–∂–µ–º–æ—Å—å. –Ø–∫—â–æ —î –ø–∏—Ç–∞–Ω–Ω—è ‚Äî –Ω–∞–ø–∏—à—ñ—Ç—å –º–µ–Ω—ñ:',
      telegram: '–¢–µ–ª–µ–≥—Ä–∞–º',
      whatsapp: '–í–∞—Ç—Å–∞–ø',
    }
  };
  const m = messages[lang];

  useEffect(() => {
    if (status === 'success') {
      setTimeout(() => {
        window.location.href = '/';
      }, 3000);
    }
  }, [status]);

  if (status === 'loading') return <h2>–ó–∞–≥—Ä—É–∑–∫–∞...</h2>;

  if (status === 'success') {
    return (
      <div style={{ textAlign: 'center', padding: '2rem' }}>
        <p>{m.text}</p>
        <p>
          <a
            href="https://t.me/hanna_dzhos"
            target="_blank"
            rel="noopener noreferrer"
            style={{ marginRight: '1rem' }}
          >
            üì≤ {m.telegram}
          </a>
          <a
            href="https://wa.me/491722324094"
            target="_blank"
            rel="noopener noreferrer"
          >
            üí¨ {m.whatsapp}
          </a>
        </p>
      </div>
    );
  }

  return <h2>‚ö†Ô∏è –û—à–∏–±–∫–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.</h2>;
}

export default Success;
