const { db } = require('./firebaseAdmin');
const { sendTelegramMessage } = require('./telegramBot');

async function createBooking(data) {
  try {
    const {
      name,
      phone,
      email,
      product,
      date,
      startTime,
      endTime,
      paymentAmount = 0,
      paymentDate = null,
      dateId // ‚Üê –≤–∞–∂–Ω–æ!
    } = data;

    const bookingEntry = {
      date,
      startTime,
      endTime,
      product,
      payment: paymentAmount,
      paymentDate,
      status: 'pending',
      createdAt: new Date().toISOString(),
      agreePolicy: true,
      agreePrepayment: true
    };

    // 0. –ü–æ–º–µ—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç—É –∫–∞–∫ –∑–∞–Ω—è—Ç—É—é (–µ—Å–ª–∏ dateId –µ—Å—Ç—å)
    if (dateId) {
      try {
        const dateRef = db.collection('availabledates').doc(dateId);
        await dateRef.update({ isBooked: true });
        console.log('‚úÖ –î–∞—Ç–∞ –ø–æ–º–µ—á–µ–Ω–∞ –∫–∞–∫ –∑–∞–Ω—è—Ç–∞—è');
      } catch (e) {
        console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–º–µ—Ç–∏—Ç—å –¥–∞—Ç—É –∫–∞–∫ –∑–∞–Ω—è—Ç—É—é:', e.message);
      }
    }

    // 1. –î–æ–±–∞–≤–ª—è–µ–º –±—Ä–æ–Ω—å –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é 'bookings'
    await db.collection('bookings').add({
      name,
      phone,
      email,
      ...bookingEntry
    });

    // 2. –ò—â–µ–º –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ email –∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω—É
    const clientsRef = db.collection('clients');
    const snapshot = await clientsRef.get();

    const existingClient = snapshot.docs.find(doc => {
      const d = doc.data();
      return d.email === email || d.phone === phone;
    });

    if (existingClient) {
      // 3. –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ‚Äî –æ–±–Ω–æ–≤–ª—è–µ–º
      const clientRef = existingClient.ref;
      const clientData = existingClient.data();
      const updatedBookings = [...(clientData.bookings || []), bookingEntry];
      const totalSum = updatedBookings.reduce((sum, b) => sum + (b.payment || 0), 0);

      await clientRef.update({
        bookings: updatedBookings,
        totalSum,
        totalOrders: updatedBookings.length
      });
    } else {
      // 4. –ò–Ω–∞—á–µ —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
      await clientsRef.add({
        name,
        phone,
        email,
        bookings: [bookingEntry],
        totalSum: paymentAmount,
        totalOrders: 1,
        status: 'pending'
      });
    }

   // 5. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram
   const calendarLink = `https://calendar.google.com/calendar/render?action=TEMPLATE&text=–°—ä—ë–º–∫–∞+${encodeURIComponent(name)}&details=–ö–ª–∏–µ–Ω—Ç:+${encodeURIComponent(name)},+—Ç–µ–ª:+${encodeURIComponent(phone)}&dates=${date.replace(/-/g, '')}T000000Z/${date.replace(/-/g, '')}T235900Z`;
   await sendTelegramMessage(`
    üì∏ <b>–ù–æ–≤–∞—è –±—Ä–æ–Ω—å</b>
    üë§ –ò–º—è: ${name}
    üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}
    üìß Email: ${email}
    üóì –î–∞—Ç–∞: ${date} ${startTime} - ${endTime}
    üì¶ –£—Å–ª—É–≥–∞: ${product}
    üí∂ –û–ø–ª–∞—Ç–∞: ${paymentAmount || 0}‚Ç¨
    üîó <a href="${calendarLink}">–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å</a>
    üîé <a href="https://videographer-booking-client.onrender.com/admin">–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å</a>
    `);
    

    console.log('‚úÖ –ë—Ä–æ–Ω—å –∏ –∫–ª–∏–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã');
    return { success: true };
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±—Ä–æ–Ω–∏:', err.message);
    return { success: false, error: err.message };
  }
}

module.exports = { createBooking };
